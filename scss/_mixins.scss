// @mixin breakpoint($breakpoint) {
//   @if map-has-key($breakpoints, $breakpoints) {
//       @media(min-width: #{map-get($breakpoints, $breakpoint)}) {
//           @content;
//       }
//   }
// }

// @mixin mq($from: false, $until: false, $and: false, $media-type: $media-type) {
//   $min-width: 0;
//   $max-width: 0;
//   $media-query: '';

//   // From: this breakpoint (inclusive)
//   @if $from {
//     @if type-of($from)==number {
//       $min-width: px2em($from);
//     }

//     @else {
//       $min-width: px2em(get-breakpoint-width($from, $breakpoints));
//     }
//   }

//   // Until: that breakpoint (exclusive)
//   @if $until {
//     @if type-of($until)==number {
//       $max-width: px2em($until);
//     }

//     @else {
//       $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;
//     }
//   }

//   @if $min-width  !=0 {
//     $media-query: '#{$media-query} and (min-width: #{$min-width})';
//   }

//   @if $max-width  !=0 {
//     $media-query: '#{$media-query} and (max-width: #{$max-width})';
//   }

//   @if $and {
//     $media-query: '#{$media-query} and #{$and}';
//   }

//   // Remove unnecessary media query prefix 'all and '
//   @if ($media-type =='all' and $media-query  !='') {
//     $media-type: '';
//     $media-query: str-slice(unquote($media-query), 6);
//   }

//   @media #{$media-type + $media-query} {
//     @content;
//   }

//   /*
//     @include mq($from: mobile) {
//     color: red;
//   }
//   @include mq($until: tablet) {
//     color: blue;
//   }
//   @include mq(mobile, tablet) {
//     color: green;
//   }
//   @include mq($from: tablet, $and: '(orientation: landscape)') {
//     color: teal;
//   }
//   @include mq(950px) {
//     color: hotpink;
//   }
//   @include mq(tablet, $media-type: screen) {
//     color: hotpink;
//   }
//   // Advanced use:
//   $my-breakpoints: (L: 900px, XL: 1200px);
//   @include mq(L, $breakpoints: $my-breakpoints) {
//     color: hotpink;
//   }
//   **/
// }


@mixin at-least-width($device-width) {
  @media only screen and (min-width: $device-width) { @content; }
}

@mixin until-width($device-width) {
  @media only screen and (max-width: $device-width) { @content; }
}

@mixin if-device($device) {
  @if $device == desktop {
      @media only screen and (min-width: $scu-desktop-min-width) { @content; }
  }
  @else if $device == tablet {
      @media only screen and (min-width: $scu-tablet-min-width) and (max-width: $scu-tablet-max-width) { @content; }
  }
  @else if $device == phone-tablet {
      @media only screen and (max-width: $scu-tablet-max-width) { @content; }
  }
  @else if $device == phone {
      @media only screen and (max-width: $scu-phone-max-width) { @content; }
  }
}
